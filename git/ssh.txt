Create ssh-keys
==============
ssh-keygen -o -a 100 -t ed25519 -f ~/.ssh/name_ed25519 -C "name@name"

-o : Save the private-key using the new OpenSSH format rather than the PEM format. Actually, this option is implied when you specify the key type as ed25519.
-a: It’s the numbers of KDF (Key Derivation Function) rounds. Higher numbers result in slower passphrase verification, increasing the resistance to brute-force password cracking should the private-key be stolen.
-t: Specifies the type of key to create, in our case the Ed25519.
-f: Specify the filename of the generated key file. If you want it to be discovered automatically by the SSH agent, it must be stored in the default `.ssh` directory within your home directory.
-C: An option to specify a comment. It’s purely informational and can be anything. But it’s usually filled with <login>@<hostname> who generated the key.



add to ssh file:
===============
Host github-name
  HostName github.com
  IdentityFile ~/.ssh/name_ed25519

Host *github.com
  IdentityFile ~/.ssh/_name_other_id_ed25519

#Host *
#  UseKeychain yes
#  AddKeysToAgent yes
#  IdentityFile ~/.ssh/id_ed25519

Test:
====

$ ssh -T git@github.com
$ ssh -T git@github-name


Cisco Keys encryption:
=====================
ssh_config
Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc
HostkeyAlgorithms ssh-dss,ssh-rsa,ssh-ed25519,ecdsa-sha2-nistp256
KexAlgorithms +diffie-hellman-group1-sha1,diffie-hellman-group14-sha1

JUMP
====
#Destination
#Host 1.1.1.1
Host 2.2.2.2
  ProxyJump host-jumphost
  User user_name
  IdentityFile ~/.ssh/id_ed25519_oob

# Jump
Host host-jumphost example-dns-address
  ProxyJump none
  IdentityFile ~/.ssh/id_ed25519

#######private IP jump
#Host *100.240
#  ProxyJump dns-address-inside-or-outside
#  User user_name
#  IdentityFile ~/.ssh/id_ed25519_oob


